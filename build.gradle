plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'org.boro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

// make application executable jar to register it as linux service
bootJar {
    launchScript()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}
ext {
    set('wavefrontVersion', "2.0.0-RC1")
    set('mapstructVersion', '1.3.0.Final')
}

// @todo make url source and item unique
// @todo add tests
// @todo add rest error advice
// @todo add docker and docker-compose support with MariaDb image
// @todo add price updates to bundle which will be the sum of item price updates
// @todo refactor to hexagonal architecture
// @todo improve item, source, bundle validation
// @todo refactor ItemPriceSynchronizer to use Stream instead of List (optional)
// @todo add notification with the prices of sets? or when price changed or reached specific price
// @todo add property sources and property metadata file
// @todo add ci/cd support
dependencies {
    // COMMON COMPONENTS
    // base services for management, configuration and discovery
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // support web/api
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // COMMON COMPONENTS
    // support database access
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.mariadb.jdbc:mariadb-java-client'

    // support web scraping
    compileOnly 'org.jsoup:jsoup:1.13.1'

    // DEVELOPMENT HELPERS
    // class mapping
    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"

    // code generation
    compileOnly 'org.projectlombok:lombok'

    // debugging
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // annotation processors
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // TESTING
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "com.wavefront:wavefront-spring-boot-bom:${wavefrontVersion}"
    }
}

test {
    useJUnitPlatform()
}
