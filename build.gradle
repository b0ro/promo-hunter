plugins {
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.coditory.integration-test' version '1.2.1'
}

group = 'org.boro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'
targetCompatibility = '16'

// make application executable jar to register it as linux service
bootJar {
    launchScript()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

project.ext.versions = [
        wavefront                  : '2.0.0-RC1',
        jsoup                      : '1.13.1',
        restAssured                : '4.4.0',
        springCloudContractWiremock: '2.2.7.RELEASE'
]

dependencies {
    // COMMON COMPONENTS
    // base services for management, configuration and discovery
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // support web/api
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // COMMON COMPONENTS
    // support database access
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // support web scraping
    implementation "org.jsoup:jsoup:${versions.jsoup}"

    // DEVELOPMENT HELPERS
    // use for development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // TESTS
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // INTEGRATION TESTS
    integrationRuntimeOnly 'com.h2database:h2'
    integrationImplementation "io.rest-assured:rest-assured:${versions.restAssured}"
    integrationImplementation "org.springframework.cloud:spring-cloud-contract-wiremock:${versions.springCloudContractWiremock}"

    integrationCompileOnly 'org.projectlombok:lombok'
    integrationAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "com.wavefront:wavefront-spring-boot-bom:${versions.wavefront}"
    }
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'b0ro_promo-hunter'
        property 'sonar.organization', 'b0ro'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.sources', '.'
        property 'sonar.inclusions', 'src/main/java/**,src/main/resources/**'
    }
}

// @todo verify if jacoco reports are correct with the configuration below
jacocoTestReport {
    executionData(fileTree(project.buildDir).include("jacoco/*.exec"))
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "failed", "skipped"]
        exceptionFormat = "full"
    }
}
